import { DocumentParts, inline, NewLine } from '../output/writer'
import { paramsFactory } from './params-factory'
import { appClient } from './app-client'
import { deployTypes } from './deploy-types'
import { utilityTypes } from './utility-types'
import { imports } from './imports'
import { createGeneratorContext, GeneratorOptions } from './generator-context'
import { appTypes } from './app-types'
import { callComposerType } from './call-composer-types'
import { Arc56Contract } from '@algorandfoundation/algokit-utils/types/app-arc56'
import { appFactory } from './app-factory'

export function* generate(app: Arc56Contract, options: GeneratorOptions = { preserveNames: false }): DocumentParts {
  const ctx = createGeneratorContext(app, options)
  yield `/* eslint-disable */`
  yield `// @ts-nocheck`
  yield `/**`
  yield ` * This file was automatically generated by @algorandfoundation/algokit-client-generator.`
  yield ` * DO NOT MODIFY IT BY HAND.`
  yield ` * requires: @algorandfoundation/algokit-utils: ^3`
  yield ` */`

  yield* imports()
  yield* inline('export const APP_SPEC: Arc56Contract = ', JSON.stringify(app))
  yield NewLine

  yield* utilityTypes()
  yield NewLine
  yield* appTypes(ctx)
  yield* deployTypes(ctx)
  yield NewLine

  // Write a call factory
  yield* paramsFactory(ctx)
  yield NewLine
  // Write a factory
  yield* appFactory(ctx)
  // Write a client
  yield* appClient(ctx)

  yield* callComposerType(ctx)
}
